syntax = "proto3";
package generated;

import "google/protobuf/empty.proto";



// User data that is needed for administrator whirlpool node authentication
message WhirlpoolAuthenticationRequest {
    // User non-unique name
    string name = 1;
    // User unique identifier
    bytes identifier = 2;
}

// User authentication certificate
message WhirlpoolAuthenticationResponse {
    // Encrypted user token
    bytes token = 1;
    bytes public_key = 2;
}



// User control request for handshake to whirlpool node
message ControlHandshakeRequest {
    // Encrypted user token
    bytes token = 1;
    // Viridian version
    string version = 2;
    // Node authentication payload
    optional string payload = 3;  // TODO: remove!
    // User local IP address
    bytes address = 4;  // TODO: remove!
    // User seaside port number
    int32 port = 5;  // TODO: remove!
    // TODO: Add viridian type to signin protocol.
}

// Handshake response, containing user ID
message ControlHandshakeResponse {
    // Optional user ID (will be sent after authentication)
    int32 userID = 1;
}



// User control request to whirlpool node
message ControlHealthcheck {
    // Optional user ID (will be sent after authentication)
    int32 userID = 1;
    // Next healthping request timeout
    int32 nextIn = 2;
}



service WhirlpoolViridian {
    rpc Authenticate(WhirlpoolAuthenticationRequest) returns (WhirlpoolAuthenticationResponse) {}

    rpc Handshake(ControlHandshakeRequest) returns (ControlHandshakeResponse) {}

    rpc Healthcheck(ControlHealthcheck) returns (google.protobuf.Empty) {}
}
