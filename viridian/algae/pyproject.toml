[tool.poetry]
name = "SeasideVPN-Algae"
version = "0.0.3"
description = "A testing SeasideVPN client and installation script for Linux"
license = "MIT"
package-mode = false
authors = [
    "Alexander Sergeev <alexander.sergeev@onmail.com>"
]

readme = "README.md"
repository = "https://github.com/pseusys/SeasideVPN"
keywords = ["open-source", "udp", "distributed", "vpn", "client-server", "pptp", "p2p-network"]

packages = [
    { include = "sources" },
    { include = "scripts" },
    { include = "tests" },
]



[tool.poetry.requires-plugins]
poethepoet = "^0.32.1"
poetry-plugin-export = "^1.9.0"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
colorama = "^0.4.6"

[tool.poetry.group.client.dependencies]
pyroute2 = "^0.7.9"
python-iptables = "^1.0.1"
betterproto = "^2.0.0b6"

[tool.poetry.group.typhoon.dependencies]
pymonocypher = "^4.0.2.5"

[tool.poetry.group.devel.dependencies]
pytest = "^8.3.2"
pythonping = "^1.1.4"
pytest-asyncio = "^0.24.0"
pytest-timeout = "^2.2.0"
pytest-dependency = "^0.6.0"

[tool.poetry.group.script.dependencies]
mypy = "^1.3.0"
flake8 = "^7.1.0"
black = "^24.8.0"
isort = "^5.11.0"
pyinstaller = "^6.9.0"
python-on-whales = "^0.74.0"
grpcio-tools = "^1.62.0"
PyYAML = "^6.0.2"
zipapps = "^2024.8.7"
cryptography = "^44.0.0"
semver = "^3.0.2"
betterproto = { version = "^2.0.0b6", extras = ["compiler"] }

[tool.poetry.group.setup.dependencies]
cryptography = "^44.0.0"
semver = "^3.0.2"

[tool.poetry.group.protocol.dependencies]
jupyter = "^1.1.1"



[tool.poe.poetry_hooks]
post_install = "generate"

[tool.poe.tasks]
generate = { script = "scripts:generate", env = { "PYTHONPATH" = "." } }
lint.script = "scripts:lint"
format.script = "scripts:format"
test-unit.script = "scripts:test_unit"
test-integration.script = "scripts:test_integration"
test-smoke.script = "scripts:test_smoke"
test-local.script = "scripts:test_local"
test-remote.script = "scripts:test_remote"
test-domain.script = "scripts:test_domain"
test-all.script = "scripts:test_all"
compile.script = "scripts:compile"
execute.script = "scripts:execute"
bundle.script = "scripts:bundle"
clean.script = "scripts:clean"
help.script = "scripts:help"



[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.isort]
profile = "black"
