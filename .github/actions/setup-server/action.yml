name: Setup server action
description: Setup VPN server for testing

inputs:
  target:
    description: The IP address that will be used for testing
    required: true
    default: example.com
  lower_port:
    description: The minimum source port number that will be used for testing
    required: true
    default: 44443
  higher_port:
    description: The maximum source port number that will be used for testing
    required: true
    default: 44445
  certificate-file:
    description: File where client connection certificate will be stored
    required: true
  test-command:
    description: Test command for no VPN access test

outputs:
  connection-link:
    description: VPN connection link
    value: ${{ steps.get-server-connection-link.outputs.connection-link }}

runs:
  using: composite

  steps:
    - name: Setup WSL
      if: runner.os == 'Windows'
      uses: Vampire/setup-wsl@v5
      with:
        distribution: Ubuntu-24.04
        set-as-default: true

    - name: Install NodeJS
      uses: actions/setup-node@v4.1.0
      with:
        node-version: 22

    - name: Install Node Dependencies
      working-directory: .github
      shell: bash
      run: npm install > /dev/null 2>&1

    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Dependencies
      working-directory: viridian/algae
      shell: bash
      run: |
        pip3 install poetry poethepoet[poetry_plugin]==0.34.0 > /dev/null 2>&1
        poetry install --extras "client devel bundle" > /dev/null 2>&1

    - name: Resolve Target
      id: resolve-target
      working-directory: .github
      shell: bash
      run: echo "target-ip=$(node actions/setup-server/resolve-target.cjs ${{ inputs.target }})" >> $GITHUB_OUTPUT

    - name: Load .ENV File
      uses: aarcangeli/load-dotenv@v1
      with:
        path: viridian/algae/docker
        filenames: test.conf.env
        quiet: true

    - name: Start Background Server
      id: start-background-server
      working-directory: .github
      shell: bash
      env:
        SUDO: ${{ runner.os == 'Linux' && 'sudo -E env "PATH=$PATH"' || '' }}
      run: echo "server-ip=$(${{ env.SUDO }} node actions/setup-server/configure_viridian_test.mjs -l ${{ inputs.lower_port }} -h ${{ inputs.higher_port }} -t ${{ steps.resolve-target.outputs.target-ip }} -s)" >> $GITHUB_OUTPUT

    - name: Get Connection Link
      id: get-server-connection-link
      working-directory: viridian/algae
      shell: bash
      env:
        SEASIDE_ADDRESS: ${{ steps.start-background-server.outputs.server-ip }}
        SEASIDE_CERTIFICATE_PATH: certificates/viridian
        SEASIDE_LOG_LEVEL: ERROR
      run: echo "connection-link=$(poetry poe -q fixture -a "${{ env.SEASIDE_ADDRESS }}" -p "${{ env.SEASIDE_API_PORT }}" -k "${{ env.SEASIDE_API_KEY_ADMIN }}" supply-viridian -s)" >> $GITHUB_OUTPUT

    - name: Test Echo Server Access (no VPN)
      if: ${{ inputs.test-command != '' }}
      shell: bash
      env:
        RUNNER: ${{ runner.os == 'Linux' && 'bash -c' || 'powershell -Command' }}
      run: ${{ env.RUNNER }} "${{ inputs.test-command }}" && exit 1 || true
