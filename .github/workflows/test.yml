name: TEST
# TODO: fix 'install poethepoet[poetry_plugin]' once windows issue is resolved: https://github.com/python-poetry/poetry/issues/10028

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  RUNNING_IN_CI: 1

jobs:
  viridian-algae-test-full:
    name: Test Viridian Algae Full
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 3.11 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies 🔮
        working-directory: viridian/algae
        run: |
          pip3 install poetry
          poetry install --extras "setup test"

      - name: Test Viridian Algae (unit) 🧪
        working-directory: viridian/algae
        run: poetry poe test-unit

      - name: Test Viridian Algae (integration) 📇
        working-directory: viridian/algae
        run: poetry poe test-integration

      - name: Test Viridian Algae (smoke) 😶‍🌫️
        working-directory: viridian/algae
        run: poetry poe test-smoke

  viridian-algae-test-quick:
    name: Test Viridian Algae Quick
    runs-on: ubuntu-latest
    env:
      TARGET_ADDRESS: 1.1.1.1
      TEST_COMMAND: curl -sS -I --fail --max-time 15 https://1.1.1.1

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup VPN Server
        id: setup-test-server
        uses: ./.github/actions/setup-server
        with:
          target: ${{ env.TARGET_ADDRESS }}
          test-command: ${{ env.TEST_COMMAND }}

      - name: Test Viridian Algae PORT (standalone) 🧪
        id: test-viridian-algae-port
        working-directory: viridian/algae
        run: sudo -E env "PATH=$PATH" poetry poe client -s port -l "${{ steps.setup-test-server.outputs.connection-link }}" --capture-addresses ${{ env.TARGET_ADDRESS }} -e "${{ env.TEST_COMMAND }}"

      - name: Test Viridian Algae TYPHOON (standalone) 🧪
        id: test-viridian-algae-typhoon
        working-directory: viridian/algae
        run: sudo -E env "PATH=$PATH" poetry poe client -s typhoon -l "${{ steps.setup-test-server.outputs.connection-link }}" --capture-addresses ${{ env.TARGET_ADDRESS }} -e "${{ env.TEST_COMMAND }}"

  viridian-reef-test:
    name: Test Viridian Reef
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    env:
      TARGET_ADDRESS: 1.1.1.1
      SEASIDE_LOG_LEVEL: reeflib=DEBUG,INFO
      SUDO: ${{ matrix.os == 'ubuntu' && 'sudo -E env "PATH=$PATH"' || '' }}
      TEST: ${{ matrix.os == 'ubuntu' && 'curl -sS -I --fail --max-time 15 https://1.1.1.1' || 'Invoke-WebRequest -Uri "https://1.1.1.1" -Method Head -TimeoutSec 15 -ErrorAction Stop' }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Rust 🦀
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.os == 'ubuntu' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}
          cache-workspaces: viridian/reef
          override: true

      - name: Test Viridian Reef (unit) 🧪
        working-directory: viridian/reef
        run: ${{ env.SUDO }} cargo test --package SeasideVPN-Reef --lib -- --nocapture --show-output

      - name: Setup VPN Server
        id: setup-test-server
        uses: ./.github/actions/setup-server
        with:
          target: ${{ env.TARGET_ADDRESS }}
          test-command: ${{ env.TEST }}

      - name: Test Viridian Reef PORT (integration) 🧪
        id: test-viridian-reef-port
        working-directory: viridian/reef
        run: ${{ env.SUDO }} cargo run --features cli-exec --bin cli -- -s port -l "${{ steps.setup-test-server.outputs.connection-link }}" --capture-addresses ${{ env.TARGET_ADDRESS }} -e "${{ env.TEST }}"

      - name: Test Viridian Reef TYPHOON (integration) 🧪
        id: test-viridian-reef-typhoon
        working-directory: viridian/reef
        run: ${{ env.SUDO }} cargo run --features cli-exec --bin cli -- -s typhoon -l "${{ steps.setup-test-server.outputs.connection-link }}" --capture-addresses ${{ env.TARGET_ADDRESS }} -e "${{ env.TEST }}"

  caerulean-whirlpool-test:
    name: Test Caerulean Whirlpool
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Test Caerulean Whirlpool 🧪
        working-directory: caerulean/whirlpool
        run: make -s test

  caerulean-installer-script:
    name: Test Caerulean Installer Script
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dist: [compile, docker, binary]
        caerulean: [whirlpool]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 3.11 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependencies 🔮
        working-directory: viridian/algae
        run: |
          pip3 install poetry
          poetry install --extras "bundle setup"

      - name: Compile Installer Script 🏗️
        working-directory: viridian/algae
        run: poetry poe bundle

      - name: Run Installer Script 📥
        working-directory: viridian/algae
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: sudo -E python3 install.pyz -g -a no ${{ matrix.caerulean }} -r ${{ matrix.dist }} -s ${{ env.BRANCH_NAME }}
