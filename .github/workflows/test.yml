name: TEST
# TODO: fix "npm --prefix" commands once the windows issue is finally resolved: https://github.com/npm/cli/issues/4511

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  viridian-algae-test:
    name: Test Viridian Algae
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 3.10 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies 🔮
        run: |
          pip3 install poetry poethepoet[poetry_plugin]
          poetry -C viridian/algae install --without client,devel

      - name: Test Viridian Algae (unit) 🧪
        run: poetry poe -C viridian/algae test-unit

      - name: Test Viridian Algae (integration) 📇
        run: poetry poe -C viridian/algae test-integration

      - name: Test Viridian Algae (smoke) 😶‍🌫️
        run: poetry poe -C viridian/algae test-smoke

  viridian-reef-test:
    name: Test Viridian Reef
    runs-on: ${{ format('{0}-latest', matrix.os) }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, windows]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Install NodeJS 🪢
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 22

      - name: Setup Python 3.10 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Setup Rust 🦀
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.os == 'ubuntu' && 'x86_64-unknown-linux-gnu' || 'x86_64-pc-windows-msvc' }}
          cache-workspaces: viridian/reef
          override: true

      - name: Install Dependencies 🔮
        run: |
          cd .github/scripts && npm install && ../.. 
          pip3 install poetry poethepoet[poetry_plugin]
          poetry -C viridian/algae install --without client

      - name: Test Viridian Reef (unit) 🧪
        env:
          RUNNER_COMMAND: sudo -E env "PATH=$PATH" cargo
        run: ${{ env.RUNNER_COMMAND }} test --package SeasideVPN-Reef --lib --manifest-path viridian/reef/Cargo.toml -- --nocapture --show-output

      - name: Prepare Host
        run: cd .github/scripts && npm run configure-viridian-test

      - name: Load .ENV File
        uses: aarcangeli/load-dotenv@v1
        with:
          path: .github/scripts

      - name: Test Viridian Reef (integration) 🧪
        env:
          SEASIDE_ROOT_CERTIFICATE_AUTHORITY: viridian/reef/certificates/viridian/rootCA.crt
          RUNNER_COMMAND: sudo -E env "PATH=$PATH" cargo run --features cli-exec --bin cli --manifest-path viridian/reef/Cargo.toml
          TEST_COMMAND: poetry -C viridian/algae run pytest --log-cli-level=INFO tests/test_local.py
        run: ${{ env.RUNNER_COMMAND }} -- -a "${{ env.SEASIDE_ADDRESS }}" -c "${{ env.SEASIDE_CTRLPORT }}" -p "${{ env.SEASIDE_PAYLOAD_VIRIDIAN }}" -e "${{ env.TEST_COMMAND }}"

  caerulean-whirlpool-test:
    name: Test Caerulean Whirlpool
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Test Caerulean Whirlpool 🧪
        run: make test-whirlpool

  caerulean-installer-script:
    name: Test Caerulean Installer Script
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dist: [compile, docker, binary]
        caerulean: [whirlpool]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 3.10 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Run Installer Script 📥
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        run: sudo -E PYTHONPATH=viridian/algae python3 -m setup -g -a no ${{ matrix.caerulean }} -r ${{ matrix.dist }} -s ${{ env.BRANCH_NAME }}
