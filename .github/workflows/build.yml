name: BUILD

on:
  workflow_call:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  viridian-algae-build:
    name: Build Viridian Algae Client Executable
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Python 3.10 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Protoc 💾
        uses: arduino/setup-protoc@v3
        with:
          version: "24.4"

      - name: Install Dependencies 🔮
        run: |
          pip3 install poetry poethepoet[poetry_plugin]
          poetry -C viridian/algae install --without devel

      - name: Build Algae Executable 🏗️
        env:
          EXEC_NAME: viridian-algae-executable
        run: poetry poe -C viridian/algae compile ${{ env.EXEC_NAME }}.run

      - name: Build Caerulean Installer 📥
        env:
          EXEC_NAME: caerulean-installer
        run: poetry poe -C viridian/algae bundle ${{ env.EXEC_NAME }}.pyz

      - name: Create Artifact Name From Branch Name 🌱
        uses: mad9000/actions-find-and-replace-string@5
        id: branch-name
        with:
          source: ${{ github.head_ref || github.ref_name }}
          find: '/'
          replace: '_'
          replaceAll: true

      - name: Save Artifact 🏺
        uses: actions/upload-artifact@v4
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        with:
          name: algae-executable-${{ steps.branch-name.outputs.value }}
          retention-days: 3
          if-no-files-found: error
          path: |
            viridian/algae/dist/*.run
            viridian/algae/*.pyz

  caerulean-whirlpool-build:
    name: Build Caerulean Whirlpool Server Executable
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Go 1.22 🦫
        uses: actions/setup-go@v5
        with:
          go-version: "^1.22.0"

      - name: Install Dependencies 🔮
        run: go install github.com/pseusys/protogo@latest

      - name: Build Caerulean Whirlpool 🏗️
        env:
          GOARCH: ${{ matrix.arch }}
          COMPILE_FLAGS: -s
          EXEC_NAME: ${{ format('caerulean-whirlpool-executable-{0}', matrix.arch) }}
        run: make -C caerulean/whirlpool build EXEC_NAME=${{ env.EXEC_NAME }}.run

      - name: Create Artifact Name From Branch Name 🌱
        uses: mad9000/actions-find-and-replace-string@5
        id: branch-name
        with:
          source: ${{ github.head_ref || github.ref_name }}
          find: '/'
          replace: '_'
          replaceAll: true

      - name: Save Artifact 🏺
        uses: actions/upload-artifact@v4
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
        with:
          name: whirlpool-executable-${{ steps.branch-name.outputs.value }}-${{ matrix.arch }}
          path: caerulean/whirlpool/build/caerulean-whirlpool-executable-*.run
          retention-days: 3
          if-no-files-found: error

  viridian-reef-build:
    name: Build Viridian Reef Client Executable
    runs-on: ${{ matrix.os == 'linux' && 'ubuntu-latest' || 'windows-latest' }}
    env:
      TARGET: ${{ matrix.arch == 'amd64' && 'x86_64' || 'aarch64' }}-${{ matrix.os == 'linux' && 'unknown-linux-gnu' || 'pc-windows-msvc' }}
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [linux, windows]

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      - name: Setup Rust 🦀
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.TARGET }}
          override: true

      - name: Build Viridian Reef 🏗️
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: true
          args: --release --features cli-exec --bin cli --manifest-path viridian/reef/Cargo.toml --target ${{ env.TARGET }}

      - name: Rename Executable 📛
        env:
          EXEC_SRC: ${{ matrix.os == 'linux' && 'cli' || 'cli.exe' }}
          EXEC_STEM: ${{ format('viridian-reef-executable-{0}-{1}', matrix.os, matrix.arch) }}
          EXEC_EXT: ${{ matrix.os == 'linux' && 'run' || 'exe' }}
        run: mv viridian/reef/target/${{ env.TARGET }}/release/${{ env.EXEC_SRC }} viridian/reef/target/${{ env.EXEC_STEM }}.${{ env.EXEC_EXT }}

      - name: Create Artifact Name From Branch Name 🌱
        uses: mad9000/actions-find-and-replace-string@5
        id: branch-name
        with:
          source: ${{ github.head_ref || github.ref_name }}
          find: '/'
          replace: '_'
          replaceAll: true

      - name: Save Artifact 🏺
        uses: actions/upload-artifact@v4
        with:
          name: reef-executable-${{ steps.branch-name.outputs.value }}-${{ matrix.os }}-${{ matrix.arch }}
          path: viridian/reef/target/viridian-reef-executable-*.*
          retention-days: 3
          if-no-files-found: error
